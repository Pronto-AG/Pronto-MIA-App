name: App CI

on: push

defaults:
  run:
    working-directory: pronto_mia

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@v2
      
    - name: Setup java
      uses: actions/setup-java@v1
      with:
        java-version: '12.x'
        
    - name: Setup flutter
      uses: subosito/flutter-action@v1
      with:
        flutter-version: '2.0.3'
          
    - name: Install dependencies
      run: flutter pub get
          
    - name: Check code format
      run: flutter format --set-exit-if-changed .
      
    - name: Check linter rules
      run: flutter analyze
    
  test:
    runs-on: ubuntu-latest
    needs: lint
    steps:
    - name: Checkout repository
      uses: actions/checkout@v2
      
    - name: Setup java
      uses: actions/setup-java@v1
      with:
        java-version: '12.x'
        
    - name: Setup flutter
      uses: subosito/flutter-action@v1
      with:
        flutter-version: '2.0.3'

    - name: Install dependencies
      run: flutter pub get
      
    - name: Run tests
      run: flutter test --coverage
    
    - name: Install lcov
      run: sudo apt-get install lcov -y
    
    - name: Generate test coverage
      run: genhtml coverage/lcov.info -o coverage/html
    
    - name: Upload test coverage
      uses: actions/upload-artifact@v2
      with:
        name: test-coverage
        path: pronto_mia/coverage/
        retention-days: 2
        
  build-android:
    runs-on: ubuntu-latest
    needs: test
    steps:
    - name: Checkout repository
      uses: actions/checkout@v2
      
    - name: Setup java
      uses: actions/setup-java@v1
      with:
        java-version: '12.x'
        
    - name: Setup flutter
      uses: subosito/flutter-action@v1
      with:
        flutter-version: '2.0.3'

    - name: Install dependencies
      run: flutter pub get

    - name: Import secrets
      env:
        ANDROID_GOOGLE_SERVICES: ${{ secrets.ANDROID_GOOGLE_SERVICES }}
        APP_SETTINGS: ${{ secrets.APP_SETTINGS }}
        APP_SETTINGS_PROD: ${{ secrets.APP_SETTINGS_PROD }}
      run: |
        echo "$ANDROID_GOOGLE_SERVICES" > android/app/google-services.json
        echo "$APP_SETTINGS" > assets/cfg/app_settings.json
        echo "$APP_SETTINGS_PROD" > assets/cfg/app_settings_prod.json
      
    - name: Build for android
      run: flutter build apk

    - name: Upload android build
      if: startsWith(github.ref, 'refs/tags/')
      uses: actions/upload-artifact@v2
      with:
        name: android-build
        path: pronto_mia/build/app/outputs/apk/release/app-release.apk
        retention-days: 1

  build-web-docker-master:
    name: Push Docker master image to GitHub Container Registry
    runs-on: ubuntu-latest
    needs: test
    #if: github.ref == 'refs/heads/master'
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to Github-Containers
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Import secrets
        env:
          WEB_FIREBASE_CONFIG: ${{ secrets.WEB_FIREBASE_CONFIG }}
          APP_SETTINGS: ${{ secrets.APP_SETTINGS }}
          APP_SETTINGS_PROD: ${{ secrets.APP_SETTINGS_PROD }}
        run: |
          echo "$WEB_FIREBASE_CONFIG" > web/firebase-config.js
          echo "$APP_SETTINGS" > assets/cfg/app_settings.json
          echo "$APP_SETTINGS_PROD" > assets/cfg/app_settings_prod.json

      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          tags: ghcr.io/pronto-ag/pronto-mia-app:master

  build-web-docker-release:
    name: Push Docker release image to GitHub Container Registry
    runs-on: ubuntu-latest
    needs: test
    if: startsWith(github.ref, 'refs/tags/')
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      
      - name: Set release tag env
        run: echo "RELEASE_VERSION=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      
      - name: Login to Github-Containers
        uses: docker/login-action@v1 
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Import secrets
        env:
          WEB_FIREBASE_CONFIG: ${{ secrets.WEB_FIREBASE_CONFIG }}
          APP_SETTINGS: ${{ secrets.APP_SETTINGS }}
          APP_SETTINGS_PROD: ${{ secrets.APP_SETTINGS_PROD }}
        run: |
          echo "$WEB_FIREBASE_CONFIG" > web/firebase-config.js
          echo "$APP_SETTINGS" > assets/cfg/app_settings.json
          echo "$APP_SETTINGS_PROD" > assets/cfg/app_settings_prod.json
      
      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          tags: |
                ghcr.io/pronto-ag/pronto-mia-app:${{ env.RELEASE_VERSION }}
                ghcr.io/pronto-ag/pronto-mia-app:latest
      
  documentation:
    runs-on: ubuntu-latest
    if: ${{ (cancelled() || success()) }}
    # && startsWith(github.ref, 'refs/tags/')}}
    needs: [build-android, build-web-docker-master, build-web-docker-release]
    #if: startsWith(github.ref, 'refs/tags/')
    steps:
    - name: Checkout repository
      uses: actions/checkout@v2
      
    - name: Setup java
      uses: actions/setup-java@v1
      with:
        java-version: '12.x'
        
    - name: Setup flutter
      uses: subosito/flutter-action@v1
      with:
        flutter-version: '2.0.3'

    - name: Enable dartdoc
      run: flutter pub global activate dartdoc
      
    - name: Generate code documentation
      run: flutter pub global run dartdoc:dartdoc

    - name: Upload code documentation
      uses: actions/upload-artifact@v2
      with:
        name: code-documentation
        path: pronto_mia/doc/api
        retention-days: 1
          
  release:
    runs-on: ubuntu-latest
    needs: documentation
    if: startsWith(github.ref, 'refs/tags/')
    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Download artifacts
      uses: actions/download-artifact@v2

    - name: Zip test coverage
      uses: thedoctor0/zip-release@master
      with:
        filename: 'test-coverage.zip'
        path: test-coverage/

    - name: Zip code documentation
      uses: thedoctor0/zip-release@master
      with:
        filename: 'code-documentation.zip'
        path: code-documentation
    
    - name: Upload release files
      uses: softprops/action-gh-release@v1
      with:
        body_path: CHANGELOG.md
        files: |
          android-build/app-release.apk
          test-coverage.zip
          code-documentation.zip
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          
