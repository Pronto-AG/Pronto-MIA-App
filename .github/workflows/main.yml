name: App CI

on: push

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@v2
      
    - name: Setup java
      uses: actions/setup-java@v1
      with:
        java-version: '12.x'
        
    - name: Setup flutter
      uses: subosito/flutter-action@v1
      with:
        flutter-version: '2.0.3'
        
    - name: Cache dependencies
      id: cache-dependencies
      uses: actions/cache@v2
      with:
        path: ~/.pub-cache/hosted/pub.dartlang.org
        key: ${{ runner.os }}-pub-${{ hashFiles('pubspec.lock') }}
          
    - name: Cache generated source files
      id: cache-generated-source
      uses: actions/cache@v2
      with:
        path: lib/app/
        key: ${{ runner.os }}-stacked-${{ hashFiles('lib/app/app.dart') }}
          
    - name: Install dependencies
      if: steps.cache-dependencies.outputs.cache-hit != 'true'
      run: flutter pub get
      
    - name: Generate additional source files
      if: steps.cache-generated-source.outputs.cache-hit != 'true'
      run: flutter pub run build_runner build --delete-conflicting-outputs
          
    - name: Check code format
      run: flutter format --set-exit-if-changed .
      
    - name: Check linter rules
      run: flutter analyze
    
  test:
    runs-on: ubuntu-latest
    needs: lint
    steps:
    - name: Checkout repository
      uses: actions/checkout@v2
      
    - name: Setup java
      uses: actions/setup-java@v1
      with:
        java-version: '12.x'
        
    - name: Setup flutter
      uses: subosito/flutter-action@v1
      with:
        flutter-version: '2.0.3'
        
    - name: Cache dependencies
      uses: actions/cache@v2
      with:
        path: ~/.pub-cache/hosted/pub.dartlang.org
        key: ${{ runner.os }}-pub-${{ hashFiles('pubspec.lock') }}
        restore-keys: |
          ${{ runner.os }}-pub-
          
    - name: Cache generated source files
      uses: actions/cache@v2
      with:
        path: lib/app/
        key: ${{ runner.os }}-stacked-${{ hashFiles('lib/app/app.dart') }}
        restore-keys: |
          ${{ runner.os }}-stacked-
      
    - name: Run tests
      run: flutter test --coverage
    
    - name: Install lcov
      run: sudo apt-get install lcov -y
    
    - name: Generate test coverage
      run: genhtml coverage/lcov.info -o coverage/html
    
    - name: Upload test coverage
      uses: actions/upload-artifact@v1
      with:
        name: test-coverage
        path: coverage/
        
  build:
    runs-on: ubuntu-latest
    needs: lint
    steps:
    - name: Checkout repository
      uses: actions/checkout@v2
      
    - name: Setup java
      uses: actions/setup-java@v1
      with:
        java-version: '12.x'
        
    - name: Setup flutter
      uses: subosito/flutter-action@v1
      with:
        flutter-version: '2.0.3'
        
    - name: Cache dependencies
      uses: actions/cache@v2
      with:
        path: ~/.pub-cache/hosted/pub.dartlang.org
        key: ${{ runner.os }}-pub-${{ hashFiles('pubspec.lock') }}
        restore-keys: |
          ${{ runner.os }}-pub-
          
    - name: Cache generated source files
      uses: actions/cache@v2
      with:
        path: lib/app/
        key: ${{ runner.os }}-stacked-${{ hashFiles('lib/app/app.dart') }}
        restore-keys: |
          ${{ runner.os }}-stacked-
          
    - name: Cache android build
      uses: actions/cache@v2
      with:
        path: build/app/outputs/apk/release/app-release.apk
        key: ${{ runner.os }}-apk-${{ hashFiles('build/app/outputs/apk/release/app-release.apk') }}
        restore-keys: |
          ${{ runner.os }}-apk-
      
    - name: Build for android
      run: flutter build apk
      
  documentation:
    runs-on: ubuntu-latest
    needs: lint
    if: startsWith(github.ref, 'refs/tags/')
    steps:
    - name: Checkout repository
      uses: actions/checkout@v2
      
    - name: Setup java
      uses: actions/setup-java@v1
      with:
        java-version: '12.x'
        
    - name: Setup flutter
      uses: subosito/flutter-action@v1
      with:
        flutter-version: '2.0.3'
        
    - name: Cache documentation
      uses: actions/cache@v2
      with:
        path: code-documentation.zip
        key: ${{ runner.os }}-documentation-${{ hashFiles('code-documentation.zip') }}
        restore-keys: |
          ${{ runner.os }}-documentation-
      
    - name: Enable dartdoc
      run: flutter pub global activate dartdoc
      
    - name: Generate code documentation
      run: flutter pub global run dartdoc:dartdoc
      
    - name: Zip code documentation
      uses: montudor/action-zip@v0.1.1
      with:
        args: zip -qq -r code-documentation.zip doc/api
          
  release:
    runs-on: ubuntu-latest
    needs: [test, build, documentation]
    if: startsWith(github.ref, 'refs/tags/')
    steps:
    - name: Checkout repository
      uses: actions/checkout@v2
        
    - name: Cache android build
      uses: actions/cache@v2
      with:
        path: build/app/outputs/apk/release/app-release.apk
        key: ${{ runner.os }}-apk-${{ hashFiles('build/app/outputs/apk/release/app-release.apk') }}
        restore-keys: |
          ${{ runner.os }}-apk-
        
    - name: Cache documentation
      uses: actions/cache@v2
      with:
        path: code-documentation.zip
        key: ${{ runner.os }}-documentation-${{ hashFiles('code-documentation.zip') }}
        restore-keys: |
          ${{ runner.os }}-documentation-
    
    - name: Upload release files
      uses: softprops/action-gh-release@v1
      with:
        body_path: CHANGELOG.md
        files: |
          build/app/outputs/apk/release/app-release.apk
          code-documentation.zip
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          
